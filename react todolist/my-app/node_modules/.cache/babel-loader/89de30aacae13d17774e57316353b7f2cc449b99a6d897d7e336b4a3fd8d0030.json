{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/project/react todolist/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // 初始化我們input輸入框為空字串\n  const [inputToDo, setInputToDo] = useState(\"\");\n  // 初始化我們待辦清單的所有內容為空陣列\n  const [toDoList, setToDoList] = useState([]);\n  // 新增待辦事項的按鈕函數\n  const handleSubmit = e => {\n    // 當我們點選Add按紐時handleSubmit會被觸發\n    // 我們不希望它刷新頁面\n    e.preventDefault();\n    // 只要inputToDo裡面不是空字串\n    // 就會創建新的To-Do List\n\n    if (inputToDo !== \"\") {\n      setToDoList([{\n        id: `${inputToDo}-${Date.now()}`,\n        inputToDo\n      }, ...toDoList]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"toDoForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setInputToDo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"allToDoList\",\n        children: toDoList.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"singleTodoTask\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toDoText\",\n            children: t.inputToDo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j2Cj4xXiwtWT9OeuB+QdniMNjCU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","inputToDo","setInputToDo","toDoList","setToDoList","handleSubmit","e","preventDefault","id","Date","now","target","value","map","t"],"sources":["/Users/apple/Desktop/project/react todolist/my-app/src/App.js"],"sourcesContent":["import React,{ useState } from 'react';\nimport './App.css';\n\nexport default function App() {\n  // 初始化我們input輸入框為空字串\n  const [inputToDo, setInputToDo] = useState(\"\");\n  // 初始化我們待辦清單的所有內容為空陣列\n  const [toDoList, setToDoList] = useState([]);\n  // 新增待辦事項的按鈕函數\n  const handleSubmit = (e) => {\n    // 當我們點選Add按紐時handleSubmit會被觸發\n    // 我們不希望它刷新頁面\n    e.preventDefault();\n    // 只要inputToDo裡面不是空字串\n    // 就會創建新的To-Do List\n\n    if (inputToDo !== \"\") {\n      setToDoList([\n        { id: `${inputToDo}-${Date.now()}`, inputToDo },\n        ...toDoList\n      ]);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {/* 標題 */}\n        <h1>To-Do List</h1>\n        {/* 待辦事項的輸入表單，提交按鈕觸發handleSubmit函式 */}\n        <form className=\"toDoForm\" onSubmit={handleSubmit}>\n          {/* 新增待辦事項的輸入框，onChange每當輸入框改變時調用 */}\n          <input type=\"text\" onChange={(e) => setInputToDo(e.target.value)} />\n          {/* 新增按鈕 */}\n          <button>Add</button>\n        </form>\n        {/* 待辦清單顯示內容，t代表整個對象為輸入框內的inpuiToDo值 */}\n        <ul className=\"allToDoList\">\n          {toDoList.map((t) => (\n            <li className=\"singleTodoTask\" key={t.id}>\n              <span className=\"toDoText\">{t.inputToDo}</span>\n              <button>Update</button>\n              <button>Delete</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AACtC,OAAO,WAAW;AAAC;AAEnB,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACA;IACAA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA;;IAEA,IAAIN,SAAS,KAAK,EAAE,EAAE;MACpBG,WAAW,CAAC,CACV;QAAEI,EAAE,EAAG,GAAEP,SAAU,IAAGQ,IAAI,CAACC,GAAG,EAAG,EAAC;QAAET;MAAU,CAAC,EAC/C,GAAGE,QAAQ,CACZ,CAAC;IACJ;EACF,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,WAAW;MAAA,wBAExB;QAAA,UAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eAEnB;QAAM,SAAS,EAAC,UAAU;QAAC,QAAQ,EAAEE,YAAa;QAAA,wBAEhD;UAAO,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAGC,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACK,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,eAEpE;UAAA,UAAQ;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACf,eAEP;QAAI,SAAS,EAAC,aAAa;QAAA,UACxBT,QAAQ,CAACU,GAAG,CAAEC,CAAC,iBACd;UAAI,SAAS,EAAC,gBAAgB;UAAA,wBAC5B;YAAM,SAAS,EAAC,UAAU;YAAA,UAAEA,CAAC,CAACb;UAAS;YAAA;YAAA;YAAA;UAAA,QAAQ,eAC/C;YAAA,UAAQ;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS,eACvB;YAAA,UAAQ;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,GAHWa,CAAC,CAACN,EAAE;UAAA;UAAA;UAAA;QAAA,QAKzC;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7CuBR,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}